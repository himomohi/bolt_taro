[["/home/project/src/utils/openai.ts","import axios from 'axios';\n\nconst OPENAI_API_URL = 'https://api.openai.com/v1/chat/completions';\n\nexport async function generateTarotReading(birthDate: string, selectedCards: string[]) {\n  const prompt = `\n    생년월일: ${birthDate}\n    선택된 타로 카드: ${selectedCards.join(', ')}\n\n    위 정보를 바탕으로 타로 카드 해석을 해주세요. 각 카드의 의미와 전체적인 해석을 포함해 주세요.\n    해석은 친근하고 긍정적인 톤으로 작성해 주세요.\n  `;\n\n  try {\n    const response = await axios.post(\n      OPENAI_API_URL,\n      {\n        model: 'gpt-4o-mini',\n        messages: [{ role: 'user', content: prompt }],\n        max_tokens: 1500,\n        temperature: 0.7,\n      },\n      {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${import.meta.env.VITE_OPENAI_API_KEY}`,\n        },\n      }\n    );\n\n    if (response.data && response.data.choices && response.data.choices[0] && response.data.choices[0].message) {\n      return response.data.choices[0].message.content.trim();\n    } else {\n      throw new Error('API 응답 형식이 올바르지 않습니다.');\n    }\n  } catch (error) {\n    if (axios.isAxiosError(error)) {\n      if (error.response) {\n        console.error('OpenAI API 오류:', error.response.status, error.response.data);\n        throw new Error(`OpenAI API 오류: ${error.response.status} - ${JSON.stringify(error.response.data)}`);\n      } else if (error.request) {\n        console.error('OpenAI API 요청 실패:', error.message);\n        throw new Error('OpenAI API에 연결할 수 없습니다. 네트워크 연결을 확인해 주세요.');\n      }\n    }\n    console.error('타로 해석 생성 중 오류 발생:', error);\n    throw new Error('타로 해석을 생성하는 중 알 수 없는 오류가 발생했습니다.');\n  }\n}"]]